import sqlite3
import logging
import secrets
import time
import requests

from flask import jsonify

TELEGRAM_BOT_TOKEN = '7944291761:AAEAYwaL9e3GXrVDsjiGaorjcQO01zVl_R8'

RECEIPT_API_KEY = "251f0f6ad923f82749b30a2ee1f378d1"
# BaseUrl = "https://burabura.pythonanywhere.com/"
RECEIPT_API_URL = "https://receiptcheck.pythonanywhere.com"
BaseUrl = "http://127.0.0.1:5000"
RECEIPT_API_URL = "http://127.0.0.1:8000"

# Configure logging
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

def generate_user_token(telegram_id):
    """Generate a token for a user and store it in the database."""
    try:
        with sqlite3.connect('transactions.db') as conn:
            c = conn.cursor()
            c.execute("SELECT id FROM users WHERE telegram_id = ?", (telegram_id,))
            user = c.fetchone()
            if not user:
                logging.error(f"User not found for telegram_id: {telegram_id}")
                return None
            token = secrets.token_hex(16)
            expiry = int(time.time()) + 3600 * 24  # Token expires in 24 hours
            c.execute("UPDATE users SET bot_token = ?, token_expiry = ? WHERE telegram_id = ?", (token, expiry, telegram_id))
            conn.commit()
            logging.info(f"Generated token for telegram_id={telegram_id}")
            return token
    except sqlite3.Error as e:
        logging.error(f"Database error in generate_user_token: {e}")
        return None


def send_telegram_notification(telegram_id, message, msg):
    try:
        response = requests.post(
            f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendMessage",
            json={"chat_id": telegram_id, "text": message},
            timeout=5
        )
        if response.status_code == 200:
            logging.info(f"Notification sent to {telegram_id}: {message}")
            return jsonify({"status": "success", "message": msg}), 200
        else:
            logging.error(f"Failed to send notification to {telegram_id}: {response.json()}")
            return jsonify({"status": "error", "message": response.json().get('description', 'Failed to send.')}), 500
    except requests.RequestException as e:
        logging.error(f"Notification error for {telegram_id}: {e}")
        return jsonify({"status": "error", "message": str(e)}), 500


# Odds table
ODD_PRICE = {
    'kiron': {
        1: [[1, 4]],
        2: [[2, 15]],
        3: [[2, 3], [3, 35]],
        4: [[2, 1], [3, 8], [4, 100]],
        5: [[2, 1], [3, 3], [4, 15], [5, 100]],
        6: [[3, 1], [4, 10], [5, 70], [6, 1800]],
        7: [[3, 1], [4, 6], [5, 12], [6, 120], [7, 2150]],
        8: [[4, 4], [5, 8], [6, 68], [7, 600], [8, 3000]],
        9: [[4, 3], [5, 6], [6, 18], [7, 120], [8, 1800], [9, 4200]],
        10: [[4, 2], [5, 4], [6, 12], [7, 40], [8, 400], [9, 2500], [10, 5000]]
    },
    'mohio2': {
        1: [[1, 4]],
        2: [[2, 15]],
        3: [[2, 3], [3, 50]],
        4: [[2, 1], [3, 11], [4, 100]],
        5: [[2, 1], [3, 4], [4, 20], [5, 300]],
        6: [[3, 2], [4, 15], [5, 80], [6, 500]],
        7: [[3, 2], [4, 5], [5, 40], [6, 100], [7, 1000]],
        8: [[4, 5], [5, 15], [6, 100], [7, 200], [8, 2000]],
        9: [[4, 3], [5, 6], [6, 18], [7, 120], [8, 1800], [9, 4200]],
        10: [[4, 2], [5, 4], [6, 12], [7, 40], [8, 400], [9, 2500], [10, 5000]]
    },
    'type1': {
        1: [[1, 4]],
        2: [[2, 20]],
        3: [[2, 3], [3, 35]],
        4: [[2, 1], [3, 8], [4, 100]],
        5: [[2, 1], [3, 3], [4, 15], [5, 300]],
        6: [[3, 1], [4, 10], [5, 70], [6, 1800]],
        7: [[3, 1], [4, 6], [5, 12], [6, 120], [7, 2150]],
        8: [[4, 4], [5, 8], [6, 68], [7, 600], [8, 3000]],
        9: [[4, 3], [5, 6], [6, 18], [7, 120], [8, 1800], [9, 4200]],
        10: [[4, 2], [5, 4], [6, 12], [7, 40], [8, 400], [9, 2500], [10, 5000]]
    },
    'type2': {
        1: [[1, 4]],
        2: [[2, 25]],
        3: [[2, 5], [3, 45]],
        4: [[2, 1], [3, 20], [4, 300]],
        5: [[2, 1], [3, 3], [4, 15], [5, 900]],
        6: [[3, 1], [4, 10], [5, 70], [6, 1800]],
        7: [[3, 1], [4, 6], [5, 12], [6, 120], [7, 2150]],
        8: [[4, 4], [5, 8], [6, 68], [7, 600], [8, 3000]],
        9: [[4, 3], [5, 6], [6, 18], [7, 120], [8, 1800], [9, 4200]],
        10: [[4, 2], [5, 4], [6, 12], [7, 40], [8, 400], [9, 2500], [10, 5000]]
    },
    'mohio': {
        1: [[1, 4]],
        2: [[1, 1], [2, 15]],
        3: [[1, 1], [2, 3], [3, 50]],
        4: [[2, 1], [3, 11], [4, 100]],
        5: [[2, 1], [3, 4], [4, 20], [5, 300]],
        6: [[3, 2], [4, 15], [5, 80], [6, 500]],
        7: [[3, 2], [4, 5], [5, 40], [6, 100], [7, 1000]],
        8: [[4, 5], [5, 15], [6, 100], [7, 200], [8, 2000]],
        9: [[4, 3], [5, 6], [6, 18], [7, 120], [8, 1800], [9, 4200]],
        10: [[4, 2], [5, 4], [6, 12], [7, 40], [8, 400], [9, 2500], [10, 5000]]
    },
    'promo': {
        1: [[1, 4]],
        2: [[1, 1], [2, 25]],
        3: [[1, 1], [2, 8], [3, 50]],
        4: [[2, 1], [3, 20], [4, 300]],
        5: [[2, 1], [3, 3], [4, 15], [5, 900]],
        6: [[3, 1], [4, 10], [5, 70], [6, 1800]],
        7: [[3, 1], [4, 6], [5, 12], [6, 120], [7, 2150]],
        8: [[4, 4], [5, 8], [6, 68], [7, 600], [8, 3000]],
        9: [[4, 3], [5, 6], [6, 18], [7, 120], [8, 1800], [9, 4200]],
        10: [[4, 2], [5, 4], [6, 12], [7, 40], [8, 400], [9, 2500], [10, 5000]]
    },
    'promo2': {
        1: [[1, 4]],
        2: [[2, 20]],
        3: [[2, 3], [3, 35]],
        4: [[3, 8], [4, 100]],
        5: [[4, 15], [5, 300]],
        6: [[4, 1], [5, 10], [6, 70], [7, 1800]],
        7: [[4, 0], [5, 2], [6, 12], [7, 120], [8, 2150]],
        8: [[5, 0], [6, 4], [7, 40], [8, 600], [9, 3000]],
        9: [[6, 0], [7, 3], [8, 18], [9, 120], [10, 4200]],
        10: [[7, 0], [8, 2], [9, 12], [10, 40], [11, 400], [12, 2500], [13, 5000]]
    },
    'promo3': {
        1: [[1, 4]],
        2: [[1, 1], [2, 25]],
        3: [[2, 5], [3, 45]],
        4: [[2, 20], [3, 50], [4, 110]],
        5: [[2, 1], [3, 3], [4, 15], [5, 900]],
        6: [[3, 1], [4, 10], [5, 70], [6, 1800]],
        7: [[3, 1], [4, 6], [5, 12], [6, 120], [7, 2150]],
        8: [[4, 4], [5, 8], [6, 68], [7, 600], [8, 3000]],
        9: [[4, 3], [5, 6], [6, 18], [7, 120], [8, 1800], [9, 4200]],
        10: [[4, 2], [5, 4], [6, 12], [7, 40], [8, 400], [9, 2500], [10, 5000]]
    },
    'promo4': {
        1: [[1, 4]],
        2: [[1, 1], [2, 25]],
        3: [[2, 5], [3, 50]],
        4: [[3, 20], [4, 110]],
        5: [[4, 15], [5, 900]],
        6: [[4, 1], [5, 10], [6, 70], [7, 1800]],
        7: [[4, 0], [5, 2], [6, 12], [7, 120], [8, 2150]],
        8: [[5, 0], [6, 4], [7, 40], [8, 600], [9, 3000]],
        9: [[6, 0], [7, 3], [8, 18], [9, 120], [10, 4200]],
        10: [[7, 0], [8, 2], [9, 12], [10, 40], [11, 400], [12, 2500], [13, 5000]]
    },
    'promo5': {
        1: [[1, 4]],
        2: [[1, 1], [2, 25]],
        3: [[1, 1], [2, 8], [3, 45]],
        4: [[2, 1], [3, 15], [4, 200]],
        5: [[2, 1], [3, 3], [4, 15], [5, 500]],
        6: [[3, 1], [4, 10], [5, 70], [6, 1800]],
        7: [[3, 1], [4, 6], [5, 12], [6, 120], [7, 2150]],
        8: [[4, 4], [5, 8], [6, 68], [7, 600], [8, 3000]],
        9: [[4, 3], [5, 6], [6, 18], [7, 120], [8, 1800], [9, 4200]],
        10: [[4, 2], [5, 4], [6, 12], [7, 40], [8, 400], [9, 2500], [10, 5000]]
    },
    'promo6': {
        1: [[1, 4]],
        2: [[1, 1], [2, 25]],
        3: [[1, 1], [2, 4], [3, 45]],
        4: [[2, 15], [3, 20], [4, 300]],
        5: [[2, 1], [3, 3], [4, 20], [5, 900]],
        6: [[3, 1], [4, 10], [5, 70], [6, 1800]],
        7: [[3, 1], [4, 6], [5, 12], [6, 120], [7, 2150]],
        8: [[4, 4], [5, 8], [6, 68], [7, 600], [8, 3000]],
        9: [[4, 3], [5, 6], [6, 18], [7, 120], [8, 1800], [9, 4200]],
        10: [[4, 2], [5, 4], [6, 12], [7, 40], [8, 400], [9, 2500], [10, 5000]]
    }
}
